
<% title = 'Edit Profile' %>
<link rel="stylesheet" href="/css/admin/edit-profile.css" />

<main class="form-page">
  <div class="back-wrapper">
    <a href="/admin/dashboard" class="back-dashboard">← Back to Dashboard</a>
  </div>

  <section class="form-container">
    <h1>Edit Profile</h1>

    <% if (error) { %>
      <div class="alert alert-error"><%= error %></div>
    <% } %>
    <% if (success) { %>
      <div class="alert alert-success"><%= success %></div>
    <% } %>

    <form id="editProfileForm" action="/admin/dashboard/profile?_csrf=<%= csrfToken %>" method="post" enctype="multipart/form-data">
      <input type="hidden" name="_csrf" value="<%= csrfToken %>">
      <div class="form-group">
        <label for="name">Full Name</label>
        <input id="name" name="name" type="text" value="<%= user.name %>" required />
      </div>

      <div class="form-group">
        <label for="email">Email</label>
        <input id="email" name="email" type="email" value="<%= user.email %>" required />
      </div>

      <div class="form-group">
        <label for="phone">Phone Number</label>
        <input id="phone" name="phone" type="tel" value="<%= user.phone || '' %>" placeholder="+1234567890" />
      </div>

      <div class="form-group">
        <label for="profile_picture">Profile Picture</label>
        <div class="thumb-wrapper">
          <% const __pic = (user.profile_picture && (/^https?:\/\//.test(user.profile_picture) ? user.profile_picture : (user.profile_picture.startsWith('/') ? user.profile_picture : '/' + user.profile_picture))) || null; %>
          <% if (__pic) { %>
            <img id="profilePreview" src="<%= __pic %>" class="thumb" onerror="this.onerror=null;this.src='/img/default-avatar.png'" />
          <% } else { %>
            <img id="profilePreview" class="thumb" style="display:none;" />
          <% } %>
        </div>
        <input id="profile_picture" name="profile_picture" type="file" accept="image/*,.heic,.heif" />
      </div>

      <hr />

      <div class="form-group">
        <label for="password">New Password</label>
        <input id="password" name="password" type="password" placeholder="••••••••" />
      </div>

      <div class="form-group">
        <label for="passwordConfirm">Confirm New Password</label>
        <input id="passwordConfirm" name="passwordConfirm" type="password" placeholder="••••••••" />
        <div id="passwordError" class="error-text"></div>
      </div>

      <button type="submit" class="btn btn-primary">Save Changes</button>
    </form>
  </section>
</main>

<script>
  // Live picture preview
  const picInput = document.getElementById('profile_picture');
  const picPreview = document.getElementById('profilePreview');
  picInput.addEventListener('change', async e => {
    const file = e.target.files[0];
    if (!file) return;
    const ext = (file.name.split('.').pop() || '').toLowerCase();
    if (ext === 'heic' || ext === 'heif') {
      try {
        const { default: heic2any } = await import('https://cdn.skypack.dev/heic2any@0.0.4');
        const blob = await heic2any({ blob: file, toType: 'image/jpeg', quality: 0.9 });
        const url = URL.createObjectURL(blob);
        picPreview.src = url;
        picPreview.style.display = 'block';
      } catch (err) {
        // Fallback to basic preview attempt
        const reader = new FileReader();
        reader.onload = ev => {
          picPreview.src = ev.target.result;
          picPreview.style.display = 'block';
        };
        reader.readAsDataURL(file);
      }
    } else {
      const reader = new FileReader();
      reader.onload = ev => {
        picPreview.src = ev.target.result;
        picPreview.style.display = 'block';
      };
      reader.readAsDataURL(file);
    }
  });

  // Live password match
  const pw1 = document.getElementById('password');
  const pw2 = document.getElementById('passwordConfirm');
  const errEl = document.getElementById('passwordError');
  const form = document.getElementById('editProfileForm');

  function validatePasswords() {
    if (pw1.value || pw2.value) {
      if (pw1.value !== pw2.value) {
        errEl.textContent = 'Passwords do not match';
        return false;
      }
    }
    errEl.textContent = '';
    return true;
  }

  pw1.addEventListener('input', validatePasswords);
  pw2.addEventListener('input', validatePasswords);
  form.addEventListener('submit', e => {
    if (!validatePasswords()) {
      e.preventDefault();
      pw2.focus();
    }
  });
</script>